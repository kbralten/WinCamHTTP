# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: MSBuild

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: WinCamHTTP.sln

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

permissions:
  contents: read

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Setup .NET SDK (for WiX v4 SDK project)
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Restore NuGet packages (native projects)
      working-directory: ${{ github.workspace }}
      run: nuget restore ${{env.SOLUTION_FILE_PATH}}

    - name: Restore WiX v4 SDK project
      working-directory: ${{ github.workspace }}
      run: dotnet restore .\Installer\Installer.wixproj

    - name: Build (native solution)
      working-directory: ${{ github.workspace }}
      # Build x64 to match the installer inputs
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} /p:Platform=x64 ${{env.SOLUTION_FILE_PATH}}
    
    - name: Build Installer (WiX v4 SDK)
      working-directory: ${{ github.workspace }}
      run: dotnet build .\Installer\Installer.wixproj -c ${{env.BUILD_CONFIGURATION}} -p:Platform=x64

    - name: Archive Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: WinCamHTTP-${{env.BUILD_CONFIGURATION}}
        path: ${{ github.workspace }}/Installer/bin/x64/${{env.BUILD_CONFIGURATION}}/*.msi